define("local_integrity/statement",["exports","core/str","core/ajax","core/modal_events","core/modal_save_cancel","core/notification","core/templates","core/key_codes"],(function(_exports,Str,_ajax,_modal_events,_modal_save_cancel,_notification,_templates,_key_codes){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function escCloseListener(e){e.keyCode===_key_codes.default.escape&&handleCancelRedirect()}function handleCancelRedirect(){!1===self.submitted&&window.location.replace(self.cancelurl)}function agreeStatement(e,modal){const agreed=modal.getRoot().find("form input").prop("checked");if(e.preventDefault(),!1===agreed)return void modal.getRoot().find('[data-role="agreementrequired"]').removeAttr("hidden");const args={name:self.statementname,contextid:self.contextid,userid:0};_ajax.default.call([{methodname:"local_integrity_agree_statement",args:args,done:function(){self.submitted=!0,document.removeEventListener("keyup",escCloseListener),modal.destroy(),""!==self.agreeurl&&window.location.replace(self.agreeurl)},fail:function(response){_notification.default.exception(response)}}])}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=
/**
   * Bulk actions for lists of participants.
   *
   * @module     local_integrity/statement
   * @copyright  2021 Catalyst IT
   * @author     Dmitrii Metelkin (dmitriim@catalyst-au.net)
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
function(contextid,statementname,cancelurl){let agreeurl=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"";self.contextid=contextid,self.statementname=statementname,self.cancelurl=cancelurl,self.submitted=!1,self.agreeurl=agreeurl,document.addEventListener("keyup",escCloseListener);let noticeRequest={methodname:"local_integrity_get_statement_notice",args:{name:statementname}};_ajax.default.call([noticeRequest])[0].done((function(data){Str.get_strings([{key:"statement:header",component:"local_integrity"},{key:"statement:save",component:"local_integrity"},{key:"statement:cancel",component:"local_integrity"}]).then((function(langStrings){let templateContext={notice:data.notice};return _modal_save_cancel.default.create({body:_templates.default.render("local_integrity/statement_form",templateContext),title:langStrings[0],buttons:{save:langStrings[1],cancel:langStrings[2]},removeOnClose:!0,isLarge:!0})})).then((function(modal){modal.getRoot().on(_modal_events.default.save,(e=>agreeStatement(e,modal))),modal.getRoot().on(_modal_events.default.destroyed,(()=>handleCancelRedirect())),modal.getRoot().on(_modal_events.default.hidden,(()=>handleCancelRedirect())),modal.getRoot().on(_modal_events.default.cancel,(()=>handleCancelRedirect())),modal.show()})).catch(_notification.default.exception)})).fail(_notification.default.exception)},Str=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(Str),_ajax=_interopRequireDefault(_ajax),_modal_events=_interopRequireDefault(_modal_events),_modal_save_cancel=_interopRequireDefault(_modal_save_cancel),_notification=_interopRequireDefault(_notification),_templates=_interopRequireDefault(_templates),_key_codes=_interopRequireDefault(_key_codes)}));

//# sourceMappingURL=statement.min.js.map